/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Clientes;

import Controlador.ControladorClientes;
import Modelo.Articulos;
import Modelo.Clientes;
import Vista.Principal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class vClientes extends javax.swing.JDialog {

    ControladorClientes ctrlC = new ControladorClientes();

    DefaultTableModel modelo;

    public static String dni, nombre;
    
    /**
     * Creates new form vClientes
     */
    public vClientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        modelo = (DefaultTableModel) tClientes.getModel();
        rellenarTabla(Principal.listaClientes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        bAnadirClientes = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        bBorrarClientes = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        bModificarClientes = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        bEstadisticas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tClientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        etFiltroClientes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbFiltroClientes = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Clientes");
        setResizable(false);

        jToolBar1.setFloatable(false);

        bAnadirClientes.setText("Añadir");
        bAnadirClientes.setFocusable(false);
        bAnadirClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bAnadirClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bAnadirClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAnadirClientesActionPerformed(evt);
            }
        });
        jToolBar1.add(bAnadirClientes);
        jToolBar1.add(jSeparator2);

        bBorrarClientes.setText("Borrar");
        bBorrarClientes.setFocusable(false);
        bBorrarClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bBorrarClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bBorrarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarClientesActionPerformed(evt);
            }
        });
        jToolBar1.add(bBorrarClientes);
        jToolBar1.add(jSeparator1);

        bModificarClientes.setText("Modificar");
        bModificarClientes.setFocusable(false);
        bModificarClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bModificarClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bModificarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarClientesActionPerformed(evt);
            }
        });
        jToolBar1.add(bModificarClientes);
        jToolBar1.add(jSeparator3);

        bEstadisticas.setText("Estadísticas");
        bEstadisticas.setFocusable(false);
        bEstadisticas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bEstadisticas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bEstadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEstadisticasActionPerformed(evt);
            }
        });
        jToolBar1.add(bEstadisticas);

        tClientes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI/CIF", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tClientes);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("CLIENTES");

        etFiltroClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                etFiltroClientesFocusGained(evt);
            }
        });
        etFiltroClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                etFiltroClientesKeyTyped(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Filtro : ");

        cbFiltroClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI/CIF", "Nombre" }));
        cbFiltroClientes.setToolTipText("");
        cbFiltroClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltroClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(etFiltroClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(cbFiltroClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etFiltroClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFiltroClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAnadirClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAnadirClientesActionPerformed
        vAnadirClientes v = new vAnadirClientes(null, true);
        this.setVisible(false);
        v.setVisible(true);
        rellenarTabla(Principal.listaClientes);
        this.setVisible(true);
    }//GEN-LAST:event_bAnadirClientesActionPerformed

    private void bBorrarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarClientesActionPerformed
        if (tClientes.getSelectedRow() != -1) {
            Clientes c = (Clientes) tClientes.getValueAt(tClientes.getSelectedRow(), 0);
            if (c.getFacturasCabs().size() > 0) {
                JOptionPane.showMessageDialog(this, "Imposible borrar un cliente con facturas asociadas", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (JOptionPane.showConfirmDialog(this, "¿Está seguro que desea borrar el cliente: " + c.getNombrecli() + "?", "Confirme la operación", JOptionPane.OK_CANCEL_OPTION) == 0) {
                    if (ctrlC.borrarClientes(c)) {
                        for (Clientes c1 : Principal.listaClientes) {
                            if (c1.getDnicif() == c.getDnicif()) {
                                Principal.listaClientes.remove(c1);
                                break;
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Ha ocurrido un error al borrar el cliente", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                rellenarTabla(Principal.listaClientes);
            }
        } else {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Selecciona un cliente para borrar");
        }
    }//GEN-LAST:event_bBorrarClientesActionPerformed

    private void bModificarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarClientesActionPerformed
        if (tClientes.getSelectedRow() != -1) {
            Clientes c = (Clientes) tClientes.getValueAt(tClientes.getSelectedRow(), 0);
            dni = c.getDnicif();
            nombre = c.getNombrecli();
            vModificarClientes v = new vModificarClientes(null, true);
            this.setVisible(false);
            v.setVisible(true);
            rellenarTabla(Principal.listaClientes);
            this.setVisible(true);
        } else {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Selecciona un artículo para modificar");
        }
    }//GEN-LAST:event_bModificarClientesActionPerformed

    private void etFiltroClientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_etFiltroClientesFocusGained
        if (etFiltroClientes.getText().isEmpty()) {
            rellenarTabla(Principal.listaClientes);
        } else {
            rellenarTabla(ctrlC.filtrarClientes(Principal.listaClientes, cbFiltroClientes.getSelectedIndex(), etFiltroClientes.getText()));
        }
    }//GEN-LAST:event_etFiltroClientesFocusGained

    private void etFiltroClientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etFiltroClientesKeyTyped
        cbFiltroClientes.requestFocus();
        etFiltroClientes.requestFocus();
    }//GEN-LAST:event_etFiltroClientesKeyTyped

    private void cbFiltroClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltroClientesActionPerformed
        if (!etFiltroClientes.getText().isEmpty()) {
            rellenarTabla(ctrlC.filtrarClientes(Principal.listaClientes, cbFiltroClientes.getSelectedIndex(), etFiltroClientes.getText()));
        }
    }//GEN-LAST:event_cbFiltroClientesActionPerformed

    private void bEstadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEstadisticasActionPerformed
        vEstadisticas v = new vEstadisticas(null, true);
        this.setVisible(false);
        v.setVisible(true);
        this.setVisible(true);
    }//GEN-LAST:event_bEstadisticasActionPerformed

    private void rellenarTabla(List<Clientes> lista) {
        modelo.setRowCount(0);
        for (Clientes c : lista) {
            modelo.addRow(new Object[]{c, c.getNombrecli()});
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                vClientes dialog = new vClientes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAnadirClientes;
    private javax.swing.JButton bBorrarClientes;
    private javax.swing.JButton bEstadisticas;
    private javax.swing.JButton bModificarClientes;
    private javax.swing.JComboBox<String> cbFiltroClientes;
    private javax.swing.JTextField etFiltroClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tClientes;
    // End of variables declaration//GEN-END:variables
}
