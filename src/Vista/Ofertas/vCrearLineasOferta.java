/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Ofertas;

import Controlador.ControladorArticulos;
import Controlador.ControladorFacturas;
import Modelo.Articulos;
import Modelo.FacturasCab;
import Modelo.FacturasLin;
import Modelo.FacturasLinId;
import Modelo.FacturasTot;
import Vista.Facturas.VConsultaFacturas;
import Vista.Facturas.vCrearFacturas;
import Vista.Principal;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class vCrearLineasOferta extends javax.swing.JDialog {

    FacturasCab cabecera = vCrearOfertas.cabecera;
    BigDecimal base = new BigDecimal(0), descuento = new BigDecimal(0), iva = new BigDecimal(0), total = new BigDecimal(0);
    FacturasTot facturaTotal = new FacturasTot(cabecera, base, descuento, iva, total);

    List<FacturasLin> listaLineas = new ArrayList<>();
    List<Articulos> listaArticulosAModificar = new ArrayList<>();

    DefaultTableModel modeloCabecera, modeloLineas, modeloTotal;

    ControladorFacturas ctrl = new ControladorFacturas();
    ControladorArticulos ctrlA = new ControladorArticulos();

    /**
     * Creates new form vCrearLineasOferta
     */
    public vCrearLineasOferta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sCantidad.setValue(1);
        this.setLocationRelativeTo(null);
        modeloCabecera = (DefaultTableModel) tCabecera.getModel();
        modeloLineas = (DefaultTableModel) tLineas.getModel();
        modeloTotal = (DefaultTableModel) tTotal.getModel();
        rellenarArticulos();
        rellenarCabecera();
        rellenarTotal();
        rellenarLineas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        sCantidad = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        tLineas = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        etDescuento = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        bCancelar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tTotal = new javax.swing.JTable();
        bAgregar = new javax.swing.JButton();
        bBorrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        bGenerarOferta = new javax.swing.JButton();
        cbArticulos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tCabecera = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generar Líneas de la Oferta");

        jLabel4.setText("Artículos:");

        jLabel5.setText("Cantidad:");

        jLabel1.setText("Factura Actual:");

        sCantidad.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sCantidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sCantidadStateChanged(evt);
            }
        });

        tLineas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Línea", "Referencia", "Cantidad", "Precio", "Descuento", "Iva"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tLineas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tLineas.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tLineas);

        jLabel6.setText("Descuento:");

        etDescuento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        etDescuento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel2.setText("Líneas de la factura:");

        bCancelar.setText("Cancelar");
        bCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        tTotal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Base", "Descuento", "Iva", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tTotal.setEnabled(false);
        tTotal.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tTotal);

        bAgregar.setText("Agregar");
        bAgregar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bBorrar.setText("Borrar");
        bBorrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });

        jLabel3.setText("Total de la factura:");

        bGenerarOferta.setText("Generar Factura");
        bGenerarOferta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bGenerarOferta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerarOfertaActionPerformed(evt);
            }
        });

        cbArticulos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tCabecera.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tCabecera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Fecha", "DNI/CIF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tCabecera.setEnabled(false);
        tCabecera.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tCabecera);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sCantidad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(bBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(bAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbArticulos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(etDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(bGenerarOferta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(cbArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(etDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bCancelar)
                            .addComponent(bAgregar)
                            .addComponent(bBorrar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bGenerarOferta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sCantidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sCantidadStateChanged
        if ((Integer) sCantidad.getValue() < 1) {
            getToolkit().beep();
            sCantidad.setValue(1);
        }
    }//GEN-LAST:event_sCantidadStateChanged

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        if (JOptionPane.showConfirmDialog(this, "¿Está seguro que desea cancelar la operación?", "Confirme", JOptionPane.OK_CANCEL_OPTION) == 0) {
            for (FacturasLin f : listaLineas) {
                for (Articulos a1 : Principal.listaArticulos) {
                    if (a1.getReferencia() == f.getArticulos().getReferencia()) {
                        Principal.listaArticulos.remove(a1);
                        a1.setStock(new BigDecimal(Double.parseDouble(a1.getStock().toString()) + Double.parseDouble(f.getCantidad().toString())));
                        Principal.listaArticulos.add(a1);
                        break;
                    }
                }
            }
            dispose();
        }
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
        boolean repetido = false;
        if (!etDescuento.getText().isEmpty()) {
            if (Integer.parseInt(etDescuento.getText()) >= 0 && Integer.parseInt(etDescuento.getText()) <= 100) {
                Articulos a = (Articulos) cbArticulos.getSelectedItem();
                if (Double.parseDouble(a.getStock().toString()) >= Double.parseDouble(sCantidad.getValue().toString())) {
                    for (FacturasLin l : listaLineas) {
                        if (a.getReferencia() == l.getArticulos().getReferencia()) {
                            repetido = true;
                        }
                    }
                    if (repetido) {
                        for (FacturasLin l : listaLineas) {
                            if (a.getReferencia() == l.getArticulos().getReferencia()) {
                                listaLineas.remove(l);
                                l.setCantidad(new BigDecimal(Integer.parseInt(l.getCantidad().toString()) + (Integer) sCantidad.getValue()));
                                l.setDtolinea(new BigDecimal(etDescuento.getText()));
                                listaLineas.add(l);
                                a.setStock(new BigDecimal(Double.parseDouble(a.getStock().toString()) - Double.parseDouble(sCantidad.getValue().toString())));
                                listaArticulosAModificar.add(a);
                                for (Articulos a1 : Principal.listaArticulos) {
                                    if (a1.getReferencia() == a.getReferencia()) {
                                        Principal.listaArticulos.remove(a1);
                                        Principal.listaArticulos.add(a);
                                        break;
                                    }
                                }
                            }
                        }
                    } else {
                        FacturasLinId id = new FacturasLinId(cabecera.getNumfac(), ctrl.ultimoNumLinFac(listaLineas));
                        FacturasLin linea = new FacturasLin(id, a, cabecera, new BigDecimal((Integer) sCantidad.getValue()), a.getPrecio(), new BigDecimal(etDescuento.getText()), a.getPorciva());
                        listaLineas.add(linea);
                        a.setStock(new BigDecimal(Double.parseDouble(a.getStock().toString()) - Double.parseDouble(sCantidad.getValue().toString())));
                        listaArticulosAModificar.add(a);
                        for (Articulos a1 : Principal.listaArticulos) {
                            if (a1.getReferencia() == a.getReferencia()) {
                                Principal.listaArticulos.remove(a1);
                                Principal.listaArticulos.add(a);
                                break;
                            }
                        }
                    }
                    rellenarLineas();
                    calcularTotal();
                } else {
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "No hay sufiente stock de ese artículo, el stock es de " + a.getStock(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                getToolkit().beep();
                JOptionPane.showMessageDialog(this, "El descuento ha de estar comprendido entre 0 y 100", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "No puede haber ningun campo vacío", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        if (tLineas.getSelectedRow() != -1) {
            if (JOptionPane.showConfirmDialog(this, "¿Está seguro que desea borrar la línea?", "Confirme la operación", JOptionPane.OK_CANCEL_OPTION) == 0) {
                FacturasLin linea = (FacturasLin) tLineas.getValueAt(tLineas.getSelectedRow(), 0);
                for (Articulos a1 : Principal.listaArticulos) {
                    if (a1.getReferencia() == linea.getArticulos().getReferencia()) {
                        Principal.listaArticulos.remove(a1);
                        a1.setStock(new BigDecimal(Double.parseDouble(a1.getStock().toString()) + Double.parseDouble(linea.getCantidad().toString())));
                        Principal.listaArticulos.add(a1);
                        break;
                    }
                }
                listaLineas.remove(linea);
                rellenarLineas();
                calcularTotal();
            }
        } else {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Selecciona una linea de oferta para borrar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bBorrarActionPerformed

    private void bGenerarOfertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerarOfertaActionPerformed
        for (Articulos a : listaArticulosAModificar) {
            ctrlA.modificarArticulos(a);
        }
        Set<FacturasLin> set = new HashSet<>(listaLineas);
        cabecera.setFacturasLins(set);
        cabecera.setFacturasTot(facturaTotal);
        Principal.listaOfertas.add(cabecera);
        String json = ctrl.generarJSONOfertas(Principal.listaOfertas);
        try {
            FileWriter f1 = new FileWriter("Ofertas.json");
            f1.write(json);
            f1.flush();
            f1.close();
        } catch (IOException ex) {
            System.out.println("Error : "+ex.getMessage());
        }
        JOptionPane.showMessageDialog(this, "Ofertas JSON generado correctamente");
    }//GEN-LAST:event_bGenerarOfertaActionPerformed

    private void rellenarArticulos() {
        cbArticulos.removeAllItems();
        for (Articulos a : Principal.listaArticulos) {
            cbArticulos.addItem(a);
        }
    }

    private void rellenarCabecera() {
        modeloCabecera.setRowCount(0);
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        modeloCabecera.addRow(new Object[]{cabecera, format.format(cabecera.getFechafac()), cabecera.getClientes().getDnicif()});
    }

    private void rellenarLineas() {
        modeloLineas.setRowCount(0);
        for (FacturasLin f : listaLineas) {
            modeloLineas.addRow(new Object[]{f, f.getId().getLineafac(), f.getArticulos().getReferencia(), f.getCantidad(), f.getPrecio(), f.getDtolinea(), f.getIvalinea()});
        }
    }

    private void rellenarTotal() {
        modeloTotal.setRowCount(0);
        modeloTotal.addRow(new Object[]{facturaTotal.getFacturasCab().getNumfac(), facturaTotal.getBaseimp(), facturaTotal.getImpDto(), facturaTotal.getImpIva(), facturaTotal.getTotalfac()});
    }

    private void calcularTotal() {
        Double base = 0.0, descuentoTotal = 0.0, ivaTotal = 0.0;
        for (FacturasLin linea : listaLineas) {
            Double cantidad = Double.parseDouble(linea.getCantidad().toString());
            Double precio = Double.parseDouble(linea.getPrecio().toString());
            Double descuento = Double.parseDouble(linea.getDtolinea().toString());
            Double iva = Double.parseDouble(linea.getIvalinea().toString());
            base += cantidad * precio;
            descuentoTotal += cantidad * precio * (descuento / 100);
            if (descuento > 0) {
                ivaTotal += cantidad * precio * (descuento / 100) * (iva / 100);
            } else {
                ivaTotal += cantidad * precio * (iva / 100);
            }
        }
        Double total = base - descuentoTotal;
        facturaTotal = new FacturasTot(cabecera, new BigDecimal(base), new BigDecimal(descuentoTotal), new BigDecimal(ivaTotal), new BigDecimal(total));
        rellenarTotal();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vCrearLineasOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vCrearLineasOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vCrearLineasOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vCrearLineasOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                vCrearLineasOferta dialog = new vCrearLineasOferta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bBorrar;
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bGenerarOferta;
    private javax.swing.JComboBox<Articulos> cbArticulos;
    private javax.swing.JFormattedTextField etDescuento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner sCantidad;
    private javax.swing.JTable tCabecera;
    private javax.swing.JTable tLineas;
    private javax.swing.JTable tTotal;
    // End of variables declaration//GEN-END:variables
}
